{"version":3,"sources":["React Store/contants/constant.js","React Store/actions/action.js","Componets/Home/home.js","Componets/About/about.js","Componets/Contacts/contacts.js","App.js","serviceWorker.js","React Store/reducers/reducer1.js","React Store/reducers/combineReducer.js","React Store/store/store.js","index.js"],"names":["ActionTypes","CHANGE_U_name","CHANGE_ROLL_nO","CHANGE_CLASS","INCREMENT","DECREMENT","changeUser_name","updatedUsername","dispatch","type","payload","change_Roll_no","updatedRollNo","change_Class","updatedClass","increment","decrement","Home","props","userName_Change","event","setState","userName","target","value","class_Change","class","rollNo_Change","rollNo","_changeState","change_Username_ToReducer","state","change_RollNo_ToReducer","change_Class_ToReducer","className","this","onChange","onClick","user_name","roll_no","to","counter","counterIncrement","counterDecrement","React","Component","connect","registrating_reducer","About","Contacts","App","path","exact","component","Boolean","window","location","hostname","match","INITIAL_STATE","reducer","states","action","combineReducers","reducer1","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05ecba78.chunk.js","sourcesContent":["const ActionTypes = {\r\n    CHANGE_U_name: \"CHANGE_U_name\",\r\n    CHANGE_ROLL_nO: \"CHANGE_ROLL_nO\",\r\n    CHANGE_CLASS: \"CHANGE_CLASS\",\r\n    INCREMENT: \"INCREMENT\",\r\n    DECREMENT: \"DECREMENT\"\r\n}\r\nexport default ActionTypes;","import ActionTypes from '../contants/constant';\r\n\r\n\r\nexport function changeUser_name(updatedUsername) {\r\n    return dispatch => {\r\n        dispatch({ type: ActionTypes.CHANGE_U_name, payload: updatedUsername })\r\n    }\r\n}\r\nexport function change_Roll_no(updatedRollNo) {\r\n    return dispatch => {\r\n        dispatch({ type: ActionTypes.CHANGE_ROLL_nO, payload: updatedRollNo })\r\n    }\r\n}\r\nexport function change_Class(updatedClass) {\r\n    return dispatch => {\r\n        dispatch({ type: ActionTypes.CHANGE_CLASS, payload: updatedClass })\r\n    }\r\n}\r\nexport function increment() {\r\n    return dispatch => {\r\n        dispatch({ type: ActionTypes.INCREMENT, payload: 1 })\r\n    }\r\n}\r\nexport function decrement() {\r\n    return dispatch => {\r\n        dispatch({ type: ActionTypes.DECREMENT, payload: 1 })\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeUser_name } from '../../React Store/actions/action';\r\nimport { change_Class } from '../../React Store/actions/action';\r\nimport { change_Roll_no } from '../../React Store/actions/action';\r\nimport { decrement } from '../../React Store/actions/action';\r\nimport { increment } from '../../React Store/actions/action';\r\n\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            rollNo: '',\r\n            class: ''\r\n        }\r\n    }\r\n\r\n    userName_Change = (event) => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n    }\r\n\r\n    class_Change = (event) => {\r\n        this.setState({\r\n            class: event.target.value\r\n        })\r\n    }\r\n    rollNo_Change = (event) => {\r\n        this.setState({\r\n            rollNo: event.target.value\r\n        })\r\n    }\r\n\r\n    _changeState = () => {\r\n\r\n        this.props.change_Username_ToReducer(this.state.userName);\r\n        this.props.change_RollNo_ToReducer(this.state.rollNo);\r\n        this.props.change_Class_ToReducer(this.state.class);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"container text-center\">\r\n                    <u><h1>Welcome To Home Page</h1></u>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <form>\r\n                        User Name:<br></br>\r\n                        <input type=\"text\" value={this.state.userName} onChange={this.userName_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Class:<br></br>\r\n                        <input type=\"text\" value={this.state.class} onChange={this.class_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Roll No:<br></br>\r\n                        <input type=\"number\" value={this.state.rollNo} onChange={this.rollNo_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <button type=\"button\" onClick={this._changeState}>Registration</button>\r\n\r\n                    </form>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <h1>Your UserName is : <i>{this.props.user_name}</i></h1>\r\n                    <h1>Your class is : <i>{this.props.class}</i></h1>\r\n                    <h1>Your Roll No is : <i>{this.props.roll_no}</i></h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <Link to=\"/about\">\r\n                        <button>Go To About Page</button>\r\n                    </Link>\r\n                    <Link to=\"/contacts\">\r\n                        <button>Go To Contacts Page</button>\r\n                    </Link>\r\n                </div>\r\n\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"container text-center\">\r\n                    <h1>{this.props.counter}</h1>\r\n                    <br></br>\r\n                    <button onClick={() => { this.props.counterIncrement() }}>Increment</button>\r\n                    <button onClick={() => { this.props.counterDecrement() }}>Decrement</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user_name: state.registrating_reducer.user_name,\r\n        roll_no: state.registrating_reducer.roll_no,\r\n        class: state.registrating_reducer.class,\r\n        counter: state.registrating_reducer.counter\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        change_Username_ToReducer: (updatedUsername) => {\r\n            dispatch(changeUser_name(updatedUsername))\r\n        },\r\n        change_Class_ToReducer: (updatedClass) => {\r\n            dispatch(change_Class(updatedClass))\r\n        },\r\n        change_RollNo_ToReducer: (updatedRollNo) => {\r\n            dispatch(change_Roll_no(updatedRollNo))\r\n        },\r\n        counterIncrement: () => {\r\n            dispatch(increment())\r\n        },\r\n        counterDecrement: () => {\r\n            dispatch(decrement())\r\n        }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeUser_name } from '../../React Store/actions/action';\r\nimport { change_Class } from '../../React Store/actions/action';\r\nimport { change_Roll_no } from '../../React Store/actions/action';\r\nimport { decrement } from '../../React Store/actions/action';\r\nimport { increment } from '../../React Store/actions/action';\r\n\r\nclass About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            rollNo: '',\r\n            class: ''\r\n        }\r\n    }\r\n\r\n    userName_Change = (event) => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n    }\r\n\r\n    class_Change = (event) => {\r\n        this.setState({\r\n            class: event.target.value\r\n        })\r\n    }\r\n    rollNo_Change = (event) => {\r\n        this.setState({\r\n            rollNo: event.target.value\r\n        })\r\n    }\r\n\r\n    _changeState = () => {\r\n\r\n        this.props.change_Username_ToReducer(this.state.userName);\r\n        this.props.change_RollNo_ToReducer(this.state.rollNo);\r\n        this.props.change_Class_ToReducer(this.state.class);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"container text-center\">\r\n                    <u><h1>Welcome To About Page</h1></u>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"container-fluid\">\r\n                    <form>\r\n                        User Name:<br></br>\r\n                        <input type=\"text\" value={this.state.userName} onChange={this.userName_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Class:<br></br>\r\n                        <input type=\"text\" value={this.state.class} onChange={this.class_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Roll No:<br></br>\r\n                        <input type=\"number\" value={this.state.rollNo} onChange={this.rollNo_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <button type=\"button\" onClick={this._changeState}>Registration</button>\r\n\r\n                    </form>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <h1>Your UserName is : <i>{this.props.user_name}</i></h1>\r\n                    <h1>Your class is : <i>{this.props.class}</i></h1>\r\n                    <h1>Your Roll No is : <i>{this.props.roll_no}</i></h1>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button>Go To Home Page</button>\r\n                    </Link>\r\n                    <Link to=\"/contacts\">\r\n                        <button>Go To Contacts Page</button>\r\n                    </Link>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"container text-center\">\r\n                    <h1>{this.props.counter}</h1>\r\n                    <br></br>\r\n                    <button onClick={() => { this.props.counterIncrement() }}>Increment</button>\r\n                    <button onClick={() => { this.props.counterDecrement() }}>Decrement</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user_name: state.registrating_reducer.user_name,\r\n        roll_no: state.registrating_reducer.roll_no,\r\n        class: state.registrating_reducer.class,\r\n        counter: state.registrating_reducer.counter\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        change_Username_ToReducer: (updatedUsername) => {\r\n            dispatch(changeUser_name(updatedUsername))\r\n        },\r\n        change_Class_ToReducer: (updatedClass) => {\r\n            dispatch(change_Class(updatedClass))\r\n        },\r\n        change_RollNo_ToReducer: (updatedRollNo) => {\r\n            dispatch(change_Roll_no(updatedRollNo))\r\n        },\r\n        counterIncrement: () => {\r\n            dispatch(increment())\r\n        },\r\n        counterDecrement: () => {\r\n            dispatch(decrement())\r\n        }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeUser_name } from '../../React Store/actions/action';\r\nimport { change_Class } from '../../React Store/actions/action';\r\nimport { change_Roll_no } from '../../React Store/actions/action';\r\nimport { decrement } from '../../React Store/actions/action';\r\nimport { increment } from '../../React Store/actions/action';\r\n\r\n\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            rollNo: '',\r\n            class: ''\r\n        }\r\n    }\r\n\r\n    userName_Change = (event) => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        })\r\n    }\r\n\r\n    class_Change = (event) => {\r\n        this.setState({\r\n            class: event.target.value\r\n        })\r\n    }\r\n    rollNo_Change = (event) => {\r\n        this.setState({\r\n            rollNo: event.target.value\r\n        })\r\n    }\r\n\r\n    _changeState = () => {\r\n\r\n        this.props.change_Username_ToReducer(this.state.userName);\r\n        this.props.change_RollNo_ToReducer(this.state.rollNo);\r\n        this.props.change_Class_ToReducer(this.state.class);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <div className=\"container text-center\">\r\n                    <u><h1>Welcome To Contacts Page</h1></u>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"container-fluid\">\r\n                    <form>\r\n                        User Name:<br></br>\r\n                        <input type=\"text\" value={this.state.userName} onChange={this.userName_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Class:<br></br>\r\n                        <input type=\"text\" value={this.state.class} onChange={this.class_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n                        Roll No:<br></br>\r\n                        <input type=\"number\" value={this.state.rollNo} onChange={this.rollNo_Change} />\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <button type=\"button\" onClick={this._changeState}>Registration</button>\r\n\r\n                    </form>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div>\r\n                    <h1>Your UserName is : <i>{this.props.user_name}</i></h1>\r\n                    <h1>Your class is : <i>{this.props.class}</i></h1>\r\n                    <h1>Your Roll No is : <i>{this.props.roll_no}</i></h1>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button>Go To Home Page</button>\r\n                    </Link>\r\n                    <Link to=\"/About\">\r\n                        <button>Go To About Page</button>\r\n                    </Link>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"container text-center\">\r\n                    <h1>{this.props.counter}</h1>\r\n                    <br></br>\r\n                    <button onClick={() => { this.props.counterIncrement() }}>Increment</button>\r\n                    <button onClick={() => { this.props.counterDecrement() }}>Decrement</button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user_name: state.registrating_reducer.user_name,\r\n        roll_no: state.registrating_reducer.roll_no,\r\n        class: state.registrating_reducer.class,\r\n        counter: state.registrating_reducer.counter\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        change_Username_ToReducer: (updatedUsername) => {\r\n            dispatch(changeUser_name(updatedUsername))\r\n        },\r\n        change_Class_ToReducer: (updatedClass) => {\r\n            dispatch(change_Class(updatedClass))\r\n        },\r\n        change_RollNo_ToReducer: (updatedRollNo) => {\r\n            dispatch(change_Roll_no(updatedRollNo))\r\n        },\r\n        counterIncrement: () => {\r\n            dispatch(increment())\r\n        },\r\n        counterDecrement: () => {\r\n            dispatch(decrement())\r\n        }\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Componets/Home/home';\nimport About from './Componets/About/about';\nimport Contacts from './Componets/Contacts/contacts';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/contacts\" exact component={Contacts} />\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionTypes from '../contants/constant';\r\n\r\nconst INITIAL_STATE = {\r\n    user_name: \"Muhammad Bilal\",\r\n    roll_no: 904429,\r\n    class: \"XII\",\r\n    counter: 0\r\n}\r\n\r\nconst reducer = (states = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.CHANGE_U_name:\r\n            return {\r\n                ...states,\r\n                user_name: action.payload\r\n            };\r\n        case ActionTypes.CHANGE_ROLL_nO:\r\n            return {\r\n                ...states,\r\n                roll_no: action.payload\r\n            };\r\n        case ActionTypes.CHANGE_CLASS:\r\n            return {\r\n                ...states,\r\n                class: action.payload\r\n            };\r\n        case ActionTypes.INCREMENT:\r\n            return {\r\n                ...states,\r\n                counter: states.counter + action.payload\r\n            }\r\n        case ActionTypes.DECREMENT:\r\n            return {\r\n                ...states,\r\n                counter: states.counter - action.payload\r\n            }\r\n        default:\r\n            return states;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport reducer1 from './reducer1';\r\n\r\nexport default combineReducers({\r\n    registrating_reducer: reducer1,\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport registrating_reducer from '../reducers/combineReducer'\r\n\r\n\r\nconst store = createStore(\r\n    registrating_reducer,\r\n    {},\r\n    applyMiddleware(thunk),\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './React Store/store/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}